//
// Generated file, do not edit! Created by opp_msgtool 6.0 from tictoc1.msg.
//

#ifndef __TICTOC1_M_H
#define __TICTOC1_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class TicTocMsg1;
/**
 * Class generated from <tt>tictoc1.msg:2</tt> by opp_msgtool.
 * <pre>
 * message TicTocMsg1
 * {
 *     int source;
 *     int destination;
 *     int hopCount = 0;
 *     char content;
 * }
 * </pre>
 */
class TicTocMsg1 : public ::omnetpp::cMessage
{
  protected:
    int source = 0;
    int destination = 0;
    int hopCount = 0;
    char content = 0;

  private:
    void copy(const TicTocMsg1& other);

  protected:
    bool operator==(const TicTocMsg1&) = delete;

  public:
    TicTocMsg1(const char *name=nullptr, short kind=0);
    TicTocMsg1(const TicTocMsg1& other);
    virtual ~TicTocMsg1();
    TicTocMsg1& operator=(const TicTocMsg1& other);
    virtual TicTocMsg1 *dup() const override {return new TicTocMsg1(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSource() const;
    virtual void setSource(int source);

    virtual int getDestination() const;
    virtual void setDestination(int destination);

    virtual int getHopCount() const;
    virtual void setHopCount(int hopCount);

    virtual char getContent() const;
    virtual void setContent(char content);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TicTocMsg1& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TicTocMsg1& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline TicTocMsg1 *fromAnyPtr(any_ptr ptr) { return check_and_cast<TicTocMsg1*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __TICTOC1_M_H

