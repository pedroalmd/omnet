//
// Generated file, do not edit! Created by opp_msgtool 6.0 from tcp.msg.
//

#ifndef __TCP_M_H
#define __TCP_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class TcpMsg;
/**
 * Class generated from <tt>tcp.msg:2</tt> by opp_msgtool.
 * <pre>
 * message TcpMsg
 * {
 *     int source_num;
 *     int destination;
 *     char content = 't';
 *     int syn_ack;
 *     int token;
 * }
 * </pre>
 */
class TcpMsg : public ::omnetpp::cMessage
{
  protected:
    int source_num = 0;
    int destination = 0;
    char content = 't';
    int syn_ack = 0;
    int token = 0;

  private:
    void copy(const TcpMsg& other);

  protected:
    bool operator==(const TcpMsg&) = delete;

  public:
    TcpMsg(const char *name=nullptr, short kind=0);
    TcpMsg(const TcpMsg& other);
    virtual ~TcpMsg();
    TcpMsg& operator=(const TcpMsg& other);
    virtual TcpMsg *dup() const override {return new TcpMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSource_num() const;
    virtual void setSource_num(int source_num);

    virtual int getDestination() const;
    virtual void setDestination(int destination);

    virtual char getContent() const;
    virtual void setContent(char content);

    virtual int getSyn_ack() const;
    virtual void setSyn_ack(int syn_ack);

    virtual int getToken() const;
    virtual void setToken(int token);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TcpMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TcpMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline TcpMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<TcpMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __TCP_M_H

